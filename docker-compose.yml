version: '3.9'

services:
  # ============================================================================
  # Web Application
  # ============================================================================
  web:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.web
      args:
        - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
        - DATABASE_URL=${DATABASE_URL}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/packages/*/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ghxstship
    restart: unless-stopped

  # ============================================================================
  # PostgreSQL Database (Supabase-compatible)
  # ============================================================================
  postgres:
    image: supabase/postgres:15.1.0.117
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-scram-sha-256}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ghxstship
    restart: unless-stopped

  # ============================================================================
  # Redis Cache
  # ============================================================================
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ghxstship
    restart: unless-stopped

  # ============================================================================
  # Supabase Studio (Optional - for local DB management)
  # ============================================================================
  studio:
    image: supabase/studio:latest
    ports:
      - "${STUDIO_PORT:-3001}:3000"
    environment:
      SUPABASE_URL: http://localhost:${POSTGRES_PORT:-5432}
      STUDIO_PG_META_URL: http://postgres:5432
    depends_on:
      - postgres
    networks:
      - ghxstship
    profiles:
      - tools
    restart: unless-stopped

networks:
  ghxstship:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
